
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/inventory-service
spring.datasource.username=melihcan
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop

server.port=0
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
spring.application.name=inventory-service
eureka.instance.prefer-ip-address=true

spring.zipkin.base-url=http://localhost:9411

#Means that all requests will be sampled.
spring.sleuth.sampler.probability=1.0
spring.cloud.compatibility-verifier.enabled=false
spring.sleuth.integration.enabled=true

# Actuator Prometheus endpoint exposure
management.endpoints.web.exposure.include= prometheus

openapi.service.title=Inventory Service
openapi.service.version=1.0.0
openapi.service.description=Inventory Service
openapi.service.url=localhost:8181
springdoc.api-docs.path=/inventory-service/v3/api-docs
springdoc.swagger-ui.path=/inventory-service/swagger-ui.html
